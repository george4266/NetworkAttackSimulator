# -*- coding: utf-8 -*-
"""Random_Agent_Learn

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rv-ReKfP7m_s3x6jyZLHpW6uOAdlMC7b

## Create DataFrame for google sheet
"""

import plotly.express as px
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import plotly.graph_objects as go
from collections import defaultdict

sheetID = "1LTY0AYA_X6X4y5DCLwmHv5HndoFHyLJ5g_9386xVYD8"
df = pd.read_csv(f"https://docs.google.com/spreadsheets/d/{sheetID}/export?format=csv")
df = pd.DataFrame(df)

df.drop(df.columns[0], axis=1, inplace=True) #first columns is duplicate created when creating the original DataFrame
print(df)

#https://docs.google.com/spreadsheets/d/1LTY0AYA_X6X4y5DCLwmHv5HndoFHyLJ5g_9386xVYD8/edit?usp=sharing

df.head()

#to fix some casting issues when making figures
df["steps"] = df["steps"].astype("int")
df["actions"] = df["actions"].astype("string")

#create another dataframe for correlation use
df2 = pd.DataFrame(df.actions, df.action_num_val)

df["steps"] = df["steps"].astype("int")
df["actions"] = df["actions"].astype("string")
df2 = pd.DataFrame(df.actions, df.action_num_val)

fig = px.line(df,x="steps", y="rewards")
fig.show()

"""There is no correlation between action_num_val and the rewards. This makes sense as this is a random agent doing random actions. In the bruteforce agent the values iterate starting at one and incrementing action_num_val until it is completed. """

fig2 = px.scatter(df,x="steps", y="rewards", color="action_num_val")
fig.update_traces(marker_size=10)
fig2.show()



"""### Numpy correlation

__Strong Correlation:__

- Rewards vs Step

__Weak Corelation:__
- Rewards vs action_num_val
- Rewards vs Done
"""

df_corr = df.corr()
fig_corr = go.Figure()
fig_corr.add_trace(
    go.Heatmap(
        x=df_corr.columns,
        y=df_corr.index,
        z=np.array(df_corr)
    )
)
print(df_corr)
fig_corr.show()

df2.head()

"""- Tried searching up how to create a correlation between a string and a number (actions and action_num_val respectively) and got this. 

- The output displays parts within the action. I believe it is just displaying the correlation between the host and the action_num_val
"""

correlation = df2.actions.str.get_dummies(sep=" ").corrwith(df.action_num_val)
print(correlation)

print(df2.actions.str.get_dummies(sep=" "))

df3 = df2.actions.str.get_dummies(sep=" ")
df3.head()
df3.to_csv("Bruteforce_actions.csv")

"""## Other"""

np.correlate(df.actions, df.action_num_val)

